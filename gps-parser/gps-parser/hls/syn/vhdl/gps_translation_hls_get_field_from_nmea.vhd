-- ==============================================================
-- Generated by Vitis HLS v2023.2.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gps_translation_hls_get_field_from_nmea is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fieldnum : IN STD_LOGIC_VECTOR (3 downto 0);
    stored_msg_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stored_msg_ce0 : OUT STD_LOGIC;
    stored_msg_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (6 downto 0) );
end;


architecture behav of gps_translation_hls_get_field_from_nmea is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal select_ln51_fu_58_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln51_reg_136 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln51_fu_82_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln51_reg_144 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_start : STD_LOGIC;
    signal grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_done : STD_LOGIC;
    signal grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_idle : STD_LOGIC;
    signal grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_ready : STD_LOGIC;
    signal grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_add_ln51_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_add_ln51_out_ap_vld : STD_LOGIC;
    signal grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_stored_msg_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_stored_msg_ce0 : STD_LOGIC;
    signal grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln51_1_fu_87_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln51_loc_fu_34 : STD_LOGIC_VECTOR (63 downto 0);
    signal idx2_fu_26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal add_ln57_fu_106_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_fu_30 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal i_2_fu_92_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln51_fu_52_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gps_translation_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (6 downto 0);
        add_ln51_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        add_ln51_out_ap_vld : OUT STD_LOGIC;
        stored_msg_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        stored_msg_ce0 : OUT STD_LOGIC;
        stored_msg_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44 : component gps_translation_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_start,
        ap_done => grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_done,
        ap_idle => grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_idle,
        ap_ready => grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_ready,
        empty => trunc_ln51_reg_144,
        add_ln51_out => grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_add_ln51_out,
        add_ln51_out_ap_vld => grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_add_ln51_out_ap_vld,
        stored_msg_address0 => grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_stored_msg_address0,
        stored_msg_ce0 => grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_stored_msg_ce0,
        stored_msg_q0 => stored_msg_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln51_1_fu_87_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_ready = ap_const_logic_1)) then 
                    grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_30_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_30 <= ap_const_lv4_0;
            elsif (((icmp_ln51_1_fu_87_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_fu_30 <= i_2_fu_92_p2;
            end if; 
        end if;
    end process;

    idx2_fu_26_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                idx2_fu_26 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                idx2_fu_26 <= add_ln57_fu_106_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_add_ln51_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln51_loc_fu_34 <= grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_add_ln51_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                select_ln51_reg_136 <= select_ln51_fu_58_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                trunc_ln51_reg_144 <= trunc_ln51_fu_82_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_done, icmp_ln51_1_fu_87_p2, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln51_1_fu_87_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln57_fu_106_p2 <= std_logic_vector(unsigned(add_ln51_loc_fu_34) + unsigned(idx2_fu_26));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_done)
    begin
        if ((grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln51_1_fu_87_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln51_1_fu_87_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln51_1_fu_87_p2)
    begin
        if (((icmp_ln51_1_fu_87_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= idx2_fu_26(7 - 1 downto 0);
    grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_start <= grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_ap_start_reg;
    i_2_fu_92_p2 <= std_logic_vector(unsigned(i_fu_30) + unsigned(ap_const_lv4_1));
    icmp_ln51_1_fu_87_p2 <= "1" when (i_fu_30 = select_ln51_reg_136) else "0";
    icmp_ln51_fu_52_p2 <= "0" when (fieldnum = ap_const_lv4_0) else "1";
    select_ln51_fu_58_p3 <= 
        fieldnum when (icmp_ln51_fu_52_p2(0) = '1') else 
        ap_const_lv4_1;
    stored_msg_address0 <= grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_stored_msg_address0;
    stored_msg_ce0 <= grp_hls_get_field_from_nmea_Pipeline_VITIS_LOOP_53_2_fu_44_stored_msg_ce0;
    trunc_ln51_fu_82_p1 <= idx2_fu_26(7 - 1 downto 0);
end behav;
